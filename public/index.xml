<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jacob Woliver</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Jacob Woliver</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <managingEditor>jacob@jmw.sh</managingEditor>
    <webMaster>jacob@jmw.sh</webMaster>
    <lastBuildDate>Sat, 22 Jun 2024 20:52:37 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Google&#39;s Stance on Advertising in 1998; The case for Kagi</title>
      <link>http://localhost:1313/googles-stance-on-advertising-in-1998-the-case-for-kagi/</link>
      <pubDate>Sat, 22 Jun 2024 20:52:37 +0000</pubDate><author>jacob@jmw.sh</author>
      <guid>http://localhost:1313/googles-stance-on-advertising-in-1998-the-case-for-kagi/</guid>
      <description>It is interesting to read the original technical paper from Google, The Anatomy of a Large-Scale Hypertextual Web Search Engine, where Larry Page and Sergey Brin explicitly call out how advertising reduces the quality of a search engine. Some of the best lines are:&#xA;The goals of the advertising business model do not always correspond to providing quality search to users.&#xA;We expect that advertising funded search engines will be inherently biased towards the advertisers and away from the needs of the consumers.</description>
    </item>
    <item>
      <title>hui: A visual alternative to history written in Rust</title>
      <link>http://localhost:1313/hui-a-visual-alternative-to-history-written-in-rust/</link>
      <pubDate>Thu, 18 May 2023 14:15:24 +0000</pubDate><author>jacob@jmw.sh</author>
      <guid>http://localhost:1313/hui-a-visual-alternative-to-history-written-in-rust/</guid>
      <description>hui is a command-line tool to visualize and search your shell history. The source code is available on GitHub.&#xA;Quickly searching through history with hui Overview hui is command-line tool to quickly search through your terminal history. The motivation behind this tool was having a prettier and faster way to do history | grep &amp;lt;search&amp;gt;. I would do this frequently to remember some docker or curl command I had done recently, but couldn&amp;rsquo;t remember the flags I used.</description>
    </item>
    <item>
      <title>Jacob on the Shortness of Life</title>
      <link>http://localhost:1313/jacob-on-the-shortness-of-life/</link>
      <pubDate>Wed, 05 Apr 2023 21:36:18 +0000</pubDate><author>jacob@jmw.sh</author>
      <guid>http://localhost:1313/jacob-on-the-shortness-of-life/</guid>
      <description>Seneca comes out guns ablazin&amp;rsquo; right in the first few pages of On the Shortness of Life:&#xA;It is not that we have a short time to live, but that we waste a lot of it. Life is long enough, and a sufficiently generous amount of time has been given to us for the highest achievements if it were all well invested.&#xA;People are frugal in guarding their personal property; but as soon as it comes to squandering time they are most wasteful of the one thing in which it is right to be stingy.</description>
    </item>
    <item>
      <title>Understanding History and Trade-offs</title>
      <link>http://localhost:1313/understanding-history-and-trade-offs/</link>
      <pubDate>Wed, 11 Jan 2023 16:37:43 +0000</pubDate><author>jacob@jmw.sh</author>
      <guid>http://localhost:1313/understanding-history-and-trade-offs/</guid>
      <description>There Are No Zero-cost Abstractions I recently watched Chandler Carruth&amp;rsquo;s excellent talk entitled “There Are No Zero-cost Abstractions”. In it, he outlines that there are no abstractions in programming that are truly zero cost. He says there are three categories in which this cost can end up:&#xA;Compile time cost Run time cost Human cost Chandler&amp;rsquo;s premise is that the cost doesn&amp;rsquo;t go to zero, but rather, it just gets shuffled around.</description>
    </item>
    <item>
      <title>Guiding Principles</title>
      <link>http://localhost:1313/guiding-principles/</link>
      <pubDate>Mon, 09 May 2022 16:02:41 +0000</pubDate><author>jacob@jmw.sh</author>
      <guid>http://localhost:1313/guiding-principles/</guid>
      <description>I recently turned down a research role I was super excited to join. It paid well, it was part-time so I could continue with my current job, and I would have grown a lot as an engineer. It sounds perfect on paper, so why did I turn it down? As I meditated on whether accepting it would be the right thing to do, I realized I would be doing it for the wrong reasons.</description>
    </item>
    <item>
      <title>Playing with Generics in Go: Making Event Payloads More Extensible</title>
      <link>http://localhost:1313/playing-with-generics-in-go-making-event-payloads-more-extensible/</link>
      <pubDate>Sat, 07 May 2022 16:59:16 +0000</pubDate><author>jacob@jmw.sh</author>
      <guid>http://localhost:1313/playing-with-generics-in-go-making-event-payloads-more-extensible/</guid>
      <description>With the advent of generics in Go 1.18, I wanted to spend some time getting familiar with them. At a previous job, I wrote a microservice in Go that handled incoming events from a message queue and looked at their type to determine what to do with them. When writing that service, I always felt like generics would be a good fit to ease some of the pains I had when implementing all the possible payload types.</description>
    </item>
    <item>
      <title>Upload Multiple Files with Go</title>
      <link>http://localhost:1313/upload-multiple-files-with-go/</link>
      <pubDate>Sat, 30 Apr 2022 11:55:38 +0000</pubDate><author>jacob@jmw.sh</author>
      <guid>http://localhost:1313/upload-multiple-files-with-go/</guid>
      <description>I was recently working on a feature that would allow a client to upload multiple files to a server. There was already a method to upload one file with a POST of type multipart/form-data, but it was limiting to upload one file at a time. Because of this, I started looking at what the best method would be to handle uploading multiple files in bulk. I tried a few different approaches until I stumbled upon the fact that multipart/form-data already supports uploading multiple files in one request.</description>
    </item>
    <item>
      <title>Optimize for the Common Case</title>
      <link>http://localhost:1313/optimize-for-the-common-case/</link>
      <pubDate>Tue, 08 Mar 2022 06:12:45 +0000</pubDate><author>jacob@jmw.sh</author>
      <guid>http://localhost:1313/optimize-for-the-common-case/</guid>
      <description>I have this long-running joke/belief with a friend that many concepts within Computer Science actually translate to everyday life really well. One such example is Optimizing for the Common Case. I couldn’t find a good link that gives a complete overview of this concept, but from a Compiler Optimization Wikipedia page, it says the following:&#xA;The common case may have unique properties that allow a fast path at the expense of a slow path.</description>
    </item>
    <item>
      <title>Enjoy the Process</title>
      <link>http://localhost:1313/enjoy-the-process/</link>
      <pubDate>Sat, 05 Mar 2022 08:36:45 +0000</pubDate><author>jacob@jmw.sh</author>
      <guid>http://localhost:1313/enjoy-the-process/</guid>
      <description>I was meditating today with a 10 minute breathing exercise. The whole way through, all I could think about was wanting to check how much longer I had left. After struggling with that for a while, I had an epiphany - I do this in all areas of my life. I am constantly rearranging my class schedule to see if I can graduate faster, planning my next career goals, and making long lists of projects I want to complete to be better at computer graphics.</description>
    </item>
    <item>
      <title>Euler’s Method and Approximating the Future</title>
      <link>http://localhost:1313/eulers-method-and-approximating-the-future/</link>
      <pubDate>Tue, 01 Mar 2022 14:40:33 +0000</pubDate><author>jacob@jmw.sh</author>
      <guid>http://localhost:1313/eulers-method-and-approximating-the-future/</guid>
      <description>I think that the Euler&amp;rsquo;s Method can give us insight into how we can get closer to who we want to be and live more fulfilling lives. Even though the concepts described are simple, there are still pitfalls I run into when I try to live by them. Because of this, I also want to explore a little why I think I often fail at implementing these ideas into my own life.</description>
    </item>
    <item>
      <title>VGDownloader: Download Any Video Game Soundtrack</title>
      <link>http://localhost:1313/vgdownloader-download-any-video-game-soundtrack/</link>
      <pubDate>Sun, 20 Jun 2021 10:07:25 +0000</pubDate><author>jacob@jmw.sh</author>
      <guid>http://localhost:1313/vgdownloader-download-any-video-game-soundtrack/</guid>
      <description>VGDownloader is a lightweight CLI that lets you download any* video game soundtrack. Written in Go and built on PromptUI, it pings downloads.khinsider.com to retrieve the album for download. It uses channels and wait groups to concurrently get the download links for every song in the album, downloading them all at the same time. This significantly reduces the amount of time to download the album vs. sequentially downloading from the website.</description>
    </item>
    <item>
      <title>StackOverflow Prettifier: Make StackOverflow Not Bad</title>
      <link>http://localhost:1313/stackoverflow-prettifier-make-stackoverflow-not-bad/</link>
      <pubDate>Sat, 31 Aug 2019 10:07:25 +0000</pubDate><author>jacob@jmw.sh</author>
      <guid>http://localhost:1313/stackoverflow-prettifier-make-stackoverflow-not-bad/</guid>
      <description>StackOverflow Prettifier is a Firefox extention that that hides all the pointless features of StackOverflow and leaves only the useful bits.&#xA;The miniscule source code is available on GitHub.&#xA;StackOverflow Prettifier Cleans Up the UI Sales Pitch Have you ever gone to StackOverflow to research a question for work and next thing you know you’re 30 clicks deep into sidebar links reading how to make BBQ Sausages? On one hand it’s pretty cool to read about and you effectively got paid hundreds to do so, but perhaps it’s not the best decision for the longevity of your career.</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>jacob@jmw.sh</author>
      <guid>http://localhost:1313/projects/</guid>
      <description>Projects hui: A visual alternative to history written in Rust VGDownloader: Download Any Video Game Soundtrack StackOverflow Prettifier: Make StackOverflow Not Bad </description>
    </item>
  </channel>
</rss>
